<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ishang.beauty.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.ishang.beauty.entity.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userid" jdbcType="INTEGER" property="userid" />
    <result column="blogid" jdbcType="INTEGER" property="blogid" />
    <result column="cmtid" jdbcType="INTEGER" property="cmtid" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="del_flag" jdbcType="BIT" property="delFlag" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ishang.beauty.entity.Comment">
    insert into comment (id, userid, blogid, 
      cmtid, `comment`, del_flag
      )
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{blogid,jdbcType=INTEGER}, 
      #{cmtid,jdbcType=INTEGER}, #{comment,jdbcType=VARCHAR}, #{delFlag,jdbcType=BIT}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.ishang.beauty.entity.Comment">
    update comment
    set userid = #{userid,jdbcType=INTEGER},
      blogid = #{blogid,jdbcType=INTEGER},
      cmtid = #{cmtid,jdbcType=INTEGER},
      `comment` = #{comment,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, userid, blogid, cmtid, `comment`, del_flag
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, userid, blogid, cmtid, `comment`, del_flag
    from comment
  </select>

	<!-- 模糊查找 -->
	<select id="selectlike" parameterType="com.ishang.beauty.entity.Comment" resultMap="BaseResultMap">
		select id, userid, blogid, cmtid, `comment`, del_flag
		from comment
		where `comment` like concat('%',#{`comment`,jdbcType=VARCHAR},'%')
	</select>

	<!-- 获取某blog的normal评论list ( 排除reply ) -->
	<select id="selectncmt" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select id, userid, blogid, cmtid, `comment`, del_flag
		from comment
		WHERE blogid = #{blogid,jdbcType=INTEGER}
		and ISNULL(cmtid)
	</select>

	<!-- 获取某blog的所有reply -->
	<select id="selectreply" parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select id, userid, blogid, cmtid, `comment`, del_flag
		from comment
		WHERE blogid = #{blogid,jdbcType=INTEGER}
		and NOT(ISNULL(cmtid))
	</select>

	<!-- 获取某blog的评论数 -->
	<select id="getblogcmt" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		SELECT COUNT(0) FROM `comment`
		WHERE blogid = #{blogid,jdbcType=INTEGER}
	</select>
</mapper>